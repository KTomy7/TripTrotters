@using TripTrotters.ViewModels;

@model IEnumerable<Post>
@{
    int postNo = 1;
    int commNo = 1;
    int commIteration = 1;
}
<script>
   $(document).ready(function (){
        //Set comments toggle for each post
        @for(int i = 1; i <= Model.Count(); i++)
        {
            string commentBtnId = $"#commentBtn{i}";
            string commentAddId = $"#commentAdd{i}";
            string commentsListId = $"#commentsList{i}";
            string noOfCommentsBtnId = $"#noOfCommentsBtn{i}";
    
            <text>
                    $(document).on('click', '@commentBtnId', function () {
                        $('@commentAddId').toggle();
                    });

                    $(document).on('click', '@noOfCommentsBtnId', function () {
                        $('@commentsListId').toggle();
                    });
            </text>
        }

        @foreach(Post post in Model)
        {
        int totalComments = post.Comments.Count + commIteration;
        while (commIteration <= totalComments)
            {
            string commentTextId = $"#commentsText{commIteration}";
            string commentEditId = $"#commentEdit{commIteration}";
            string commentEditBtnId = $"#commentEditBtn{commIteration}";

                <text>
                    $(document).on('click', '@commentEditBtnId', function () {
                        $('@commentTextId').toggle();
                    });

                    $(document).on('click', '@commentEditBtnId', function () {
                        $('@commentEditId').toggle();
                    });
                </text>
            commIteration++;
            }   
    }
    });

</script>


<div class="feed">

    @foreach(var item in Model)
    {

        <div class="container">
            <div class="post-body">
                <div class="user-info">
                    <div class="user">
                        <img src="@item.User.ImageUrl" class="user-pro-pic">
                        <h2>@item.User.UserName</h2>
                    </div>
                </div>
                <div class="date-time">
                    @item.Date
                </div>
                <div class="description">
                    @item.Description
                </div>
                <div class="post-detail">
                    <div id="@string.Format("Carousel{0}",postNo)" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-indicators">
                            <button type="button" data-bs-target="@string.Format("#Carousel{0}",postNo)" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                            <button type="button" data-bs-target="@string.Format("#Carousel{0}",postNo)" data-bs-slide-to="1" aria-label="Slide 2"></button>
                            <button type="button" data-bs-target="@string.Format("#Carousel{0}",postNo)" data-bs-slide-to="2" aria-label="Slide 3"></button>
                        </div>
                        <div class="carousel-inner">
                            <div class="carousel-item active">
                                <img src="C:\Users\mandr\Desktop\New folder\switzerland-alps-mountain-at-night-wallpaper.jpg" class="d-block w-100" alt="...">
                            </div>
                            <div class="carousel-item">
                                <img src="C:\Users\mandr\Desktop\New folder\IMG_2547.jpg" class="d-block w-100" alt="...">
                            </div>
                            <div class="carousel-item">
                                <img src="C:\Users\mandr\Desktop\New folder\IMG_4066.jpg" class="d-block w-100" alt="...">
                            </div>
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="@string.Format("#Carousel{0}",postNo)" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="@string.Format("#Carousel{0}",postNo)" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>


                    <div class="likes-comment-preview">
                        <div class="likes-preview">
                            <span class="fas fa-thumbs-up"></span>
                            <span class="count-likes">@item.Likes</span>
                        </div>
                        <div class="comment-preview">
                            <button id="@string.Format("noOfCommentsBtn{0}",postNo)" > @item.Comments.Count comments</button>
                        </div>
                    </div>

                </div>
                <div class="likes-comment-buttons">
                    <div class="like">
                        @{
                            ViewData["Id"] = item.Id;
                        }
                        @Html.Partial("UpdateLike.cshtml", new EditPostViewModel{ Id = (int) ViewData["Id"]})
                    </div>
                    <div class="comment-button">
                        <button id="@string.Format("commentBtn{0}",postNo)" type="button" class="btn btn-light">
                            <span class="far fa-comment"></span>
                            <i>Comment</i>
                        </button>
                    </div>
                </div>

                <div id="@string.Format("commentAdd{0}",postNo)" style="display:none">
                    <div class="comment-form">
                        @{ ViewData["postId"] = item.Id; }
                        @Html.Partial("~/Views/Comment/Create.cshtml", new CommentViewModel{ PostId = (int)ViewData["postId"]})

                    </div>
                </div>
                <div id="@string.Format("commentsList{0}",postNo)" style="display:none">
                    <div class="comments">
                        @foreach(var comm in item.Comments)
                        {
                            <div class="comments-block">
                                <div class="comments-block-details">
                                    <h3 class="comments-block-details-user">@comm.User</h3>
                                    <div class="comments-block-details-date">@comm.Date</div>
                                    @if (comm.UserId == int.Parse(User.GetUserId()))
                                    {
                                        <div class="comments-block-details-edit">
                                            <button class="btn" id="@string.Format("commentEditBtn{0}",commNo)">Edit</button>
                                        </div>
                                    }
                                    @if (item.UserId == int.Parse(User.GetUserId()) || comm.UserId == int.Parse(User.GetUserId()))
                                    {
                                        <div class="comments-block-details-delete">
                                            @{ ViewData["Id"] = comm.Id; }
                                            @Html.Partial("~/Views/Comment/Delete.cshtml", new CommentViewModel{ Id = (int)ViewData["Id"]})
                                        </div>
                                    }

                                </div>
                                <div class="comments-block-text" id="@string.Format("commentsText{0}",commNo)">
                                    @comm.Text
                                </div>
                                @if(comm.UserId == int.Parse(User.GetUserId()))
                                {
                                    <div id="@string.Format("commentEdit{0}",commNo)" style="display:none">
                                        @{
                                            ViewData["Id"] = comm.Id;
                                            ViewData["Text"] = comm.Text;
                                        }
                                        @Html.Partial("~/Views/Comment/Edit.cshtml", new CommentViewModel{ Id = (int)ViewData["Id"], Text = (string) ViewData["Text"]})
                                    </div>
                                    
                                }

                                <div class="comments-block-like">
                                    @if(comm.Like > 0)
                                    {
                                        <div class="comments-block-like-count">@comm.Like Likes</div>
                                    }
                                    <button>Like</button>
                                </div>
                            </div>
                            commNo++;
                        }
                    </div>
                </div>
            </div>
         </div>
            postNo++;
    }
 </div>







